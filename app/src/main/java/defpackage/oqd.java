package defpackage;

/* compiled from: PG */
/* loaded from: classes.dex */
public final class oqd {
    public static final odl A;
    public static final odl B;
    public static final odl C;
    public static final odl D;
    public static final odl E;
    public static final odl[] F;
    public static final odl a;
    public static final odl b;
    public static final odl c;
    public static final odl d;
    public static final odl e;
    public static final odl f;
    public static final odl g;
    public static final odl h;
    public static final odl i;
    public static final odl j;
    public static final odl k;
    public static final odl l;
    public static final odl m;
    public static final odl n;
    public static final odl o;
    public static final odl p;
    public static final odl q;
    public static final odl r;
    public static final odl s;
    public static final odl t;
    public static final odl u;
    public static final odl v;
    public static final odl w;
    public static final odl x;
    public static final odl y;
    public static final odl z;

    static {
        odl odlVar = new odl("app_client", 4L);
        a = odlVar;
        odl odlVar2 = new odl("carrier_auth", 1L);
        b = odlVar2;
        odl odlVar3 = new odl("wear3_oem_companion", 1L);
        c = odlVar3;
        odl odlVar4 = new odl("wear_await_data_sync_complete", 1L);
        d = odlVar4;
        odl odlVar5 = new odl("wear_backup_restore", 7L);
        e = odlVar5;
        odl odlVar6 = new odl("wear_consent", 2L);
        f = odlVar6;
        odl odlVar7 = new odl("wear_consent_recordoptin", 1L);
        g = odlVar7;
        odl odlVar8 = new odl("wear_consent_recordoptin_swaadl", 1L);
        h = odlVar8;
        odl odlVar9 = new odl("wear_consent_supervised", 2L);
        i = odlVar9;
        odl odlVar10 = new odl("wear_get_phone_switching_feature_status", 1L);
        j = odlVar10;
        odl odlVar11 = new odl("wear_fast_pair_account_key_sync", 1L);
        k = odlVar11;
        odl odlVar12 = new odl("wear_fast_pair_get_account_keys", 1L);
        l = odlVar12;
        odl odlVar13 = new odl("wear_fast_pair_get_account_key_by_account", 1L);
        m = odlVar13;
        odl odlVar14 = new odl("wear_flush_batched_data", 1L);
        n = odlVar14;
        odl odlVar15 = new odl("wear_get_related_configs", 1L);
        o = odlVar15;
        odl odlVar16 = new odl("wear_get_node_id", 1L);
        p = odlVar16;
        odl odlVar17 = new odl("wear_logging_service", 2L);
        q = odlVar17;
        odl odlVar18 = new odl("wear_retry_connection", 1L);
        r = odlVar18;
        odl odlVar19 = new odl("wear_set_cloud_sync_setting_by_node", 1L);
        s = odlVar19;
        odl odlVar20 = new odl("wear_first_party_consents", 2L);
        t = odlVar20;
        odl odlVar21 = new odl("wear_update_config", 1L);
        u = odlVar21;
        odl odlVar22 = new odl("wear_update_connection_retry_strategy", 1L);
        v = odlVar22;
        odl odlVar23 = new odl("wear_update_delay_config", 1L);
        w = odlVar23;
        odl odlVar24 = new odl("wearable_services", 1L);
        x = odlVar24;
        odl odlVar25 = new odl("wear_cancel_migration", 1L);
        y = odlVar25;
        odl odlVar26 = new odl("wear_customizable_screens", 2L);
        z = odlVar26;
        odl odlVar27 = new odl("wear_wifi_immediate_connect", 1L);
        A = odlVar27;
        odl odlVar28 = new odl("wear_get_node_active_network_metered", 1L);
        B = odlVar28;
        odl odlVar29 = new odl("wear_consents_per_watch", 3L);
        C = odlVar29;
        odl odlVar30 = new odl("wear_material3_experience", 1L);
        D = odlVar30;
        odl odlVar31 = new odl("wear_offload_connection", 1L);
        E = odlVar31;
        F = new odl[]{odlVar, odlVar2, odlVar3, odlVar4, odlVar5, odlVar6, odlVar7, odlVar8, odlVar9, odlVar10, odlVar11, odlVar12, odlVar13, odlVar14, odlVar15, odlVar16, odlVar17, odlVar18, odlVar19, odlVar20, odlVar21, odlVar22, odlVar23, odlVar24, odlVar25, odlVar26, odlVar27, odlVar28, odlVar29, odlVar30, odlVar31};
    }
}
